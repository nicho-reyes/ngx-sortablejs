{"version":3,"sources":["../../../node_modules/tslib/tslib.es6.js","ng://ngx-sortablejs/lib/globals.ts","ng://ngx-sortablejs/lib/sortablejs-binding.ts","ng://ngx-sortablejs/lib/sortablejs-bindings.ts","ng://ngx-sortablejs/lib/sortablejs.service.ts","ng://ngx-sortablejs/lib/sortablejs.directive.ts","ng://ngx-sortablejs/lib/sortablejs.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","GLOBALS","InjectionToken","SortablejsBinding","target","insert","index","item","isFormArray","splice","get","at","remove","removeAt","defineProperty","reset","SortablejsBindings","bindingTargets","bindings","map","injectIntoEvery","items","forEach","b","getFromEvery","extractFromEvery","SortablejsService","Injectable","args","providedIn","getIndexesFromEvent","event","new","newDraggableIndex","old","oldDraggableIndex","newIndex","oldIndex","SortablejsDirective","globalConfig","service","element","zone","renderer","runInsideAngular","sortablejsInit","EventEmitter","ngOnInit","_this","Sortable","create","runOutsideAngular","ngOnChanges","changes","optionsChange","sortablejsOptions","isFirstChange","previousOptions_1","previousValue","currentOptions_1","currentValue","keys","optionName","sortableInstance","option","options","ngOnDestroy","destroy","container","sortablejsContainer","nativeElement","querySelector","setTimeout","emit","getBindings","sortablejs","optionsWithoutEvents","overridenOptions","proxyEvent","eventName","params","_i","run","_a","group","checkPull","clone","sortablejsCloneFunction","subitem","onAdd","transfer","onRemove","provided","isCloning","removeChild","parentNode","insertBefore","onUpdate","indexes","Directive","selector","Optional","type","Inject","ElementRef","NgZone","Renderer2","Input","Output","SortablejsModule","forRoot","globalOptions","ngModule","providers","provide","useValue","NgModule","declarations","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { SortablejsOptions } from './sortablejs-options';\r\n\r\nexport const GLOBALS: InjectionToken<SortablejsOptions> = new InjectionToken('Global config for sortablejs');\r\n","import { SortablejsBindingTarget } from './sortablejs-binding-target';\r\n\r\nexport class SortablejsBinding {\r\n\r\n  constructor(private target: SortablejsBindingTarget) { }\r\n\r\n  insert(index: number, item: any) {\r\n    if (this.isFormArray) {\r\n      this.target.insert(index, item);\r\n    } else {\r\n      this.target.splice(index, 0, item);\r\n    }\r\n  }\r\n\r\n  get(index: number) {\r\n    return this.isFormArray ? this.target.at(index) : this.target[index];\r\n  }\r\n\r\n  remove(index: number) {\r\n    let item;\r\n\r\n    if (this.isFormArray) {\r\n      item = this.target.at(index);\r\n      this.target.removeAt(index);\r\n    } else {\r\n      item = this.target.splice(index, 1)[0];\r\n    }\r\n\r\n    return item;\r\n  }\r\n\r\n  // we need this to identify that the target is a FormArray\r\n  // we don't want to have a dependency on @angular/forms just for that\r\n  private get isFormArray() {\r\n    // just checking for random FormArray methods not available on a standard array\r\n    return !!this.target.at && !!this.target.insert && !!this.target.reset;\r\n  }\r\n\r\n}\r\n","import { SortablejsBinding } from './sortablejs-binding';\r\nimport { SortablejsBindingTarget } from './sortablejs-binding-target';\r\n\r\nexport class SortablejsBindings {\r\n\r\n  bindings: SortablejsBinding[];\r\n\r\n  constructor(bindingTargets: SortablejsBindingTarget[]) {\r\n    this.bindings = bindingTargets.map(target => new SortablejsBinding(target));\r\n  }\r\n\r\n  injectIntoEvery(index: number, items: any[]) {\r\n    this.bindings.forEach((b, i) => b.insert(index, items[i]));\r\n  }\r\n\r\n  getFromEvery(index: number) {\r\n    return this.bindings.map(b => b.get(index));\r\n  }\r\n\r\n  extractFromEvery(index: number) {\r\n    return this.bindings.map(b => b.remove(index));\r\n  }\r\n\r\n  get provided() {\r\n    return !!this.bindings.length;\r\n  }\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class SortablejsService {\r\n\r\n  // original library calls the events in unnatural order\r\n  // first the item is added, then removed from the previous array\r\n  // this is a temporary event to work this around\r\n  // as long as only one sortable takes place at a certain time\r\n  // this is enough to have a single `global` event\r\n  transfer: (items: any[]) => void;\r\n\r\n}\r\n","import { Directive, ElementRef, EventEmitter, Inject, Input, NgZone, OnChanges, OnDestroy, OnInit, Optional, Output, Renderer2, SimpleChange } from '@angular/core';\r\nimport Sortable from 'sortablejs';\r\nimport { GLOBALS } from './globals';\r\nimport { SortablejsBindingTarget } from './sortablejs-binding-target';\r\nimport { SortablejsBindings } from './sortablejs-bindings';\r\nimport { SortablejsOptions } from './sortablejs-options';\r\nimport { SortablejsService } from './sortablejs.service';\r\n\r\nconst getIndexesFromEvent = (event: SortableEvent) => {\r\n  if (event.hasOwnProperty('newDraggableIndex') && event.hasOwnProperty('oldDraggableIndex')) {\r\n      return {\r\n        new: event.newDraggableIndex,\r\n        old: event.oldDraggableIndex,\r\n      };\r\n  } else {\r\n    return {\r\n      new: event.newIndex,\r\n      old: event.oldIndex,\r\n    };\r\n  }\r\n};\r\n\r\n@Directive({\r\n  selector: '[sortablejs]',\r\n})\r\nexport class SortablejsDirective implements OnInit, OnChanges, OnDestroy {\r\n\r\n  @Input()\r\n  sortablejs: SortablejsBindingTarget; // array or a FormArray\r\n\r\n  @Input()\r\n  sortablejsContainer: string;\r\n\r\n  @Input()\r\n  sortablejsOptions: SortablejsOptions;\r\n\r\n  @Input()\r\n  sortablejsCloneFunction: <T>(item: T) => T;\r\n\r\n  private sortableInstance: any;\r\n\r\n  @Input() runInsideAngular = false; // to be deprecated\r\n\r\n  @Output() sortablejsInit = new EventEmitter();\r\n\r\n  constructor(\r\n    @Optional() @Inject(GLOBALS) private globalConfig: SortablejsOptions,\r\n    private service: SortablejsService,\r\n    private element: ElementRef,\r\n    private zone: NgZone,\r\n    private renderer: Renderer2,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (Sortable && Sortable.create) { // Sortable does not exist in angular universal (SSR)\r\n      if (this.runInsideAngular) {\r\n        this.create();\r\n      } else {\r\n        this.zone.runOutsideAngular(() => this.create());\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: { [prop in keyof SortablejsDirective]: SimpleChange }) {\r\n    const optionsChange: SimpleChange = changes.sortablejsOptions;\r\n\r\n    if (optionsChange && !optionsChange.isFirstChange()) {\r\n      const previousOptions: SortablejsOptions = optionsChange.previousValue;\r\n      const currentOptions: SortablejsOptions = optionsChange.currentValue;\r\n\r\n      Object.keys(currentOptions).forEach(optionName => {\r\n        if (currentOptions[optionName] !== previousOptions[optionName]) {\r\n          // use low-level option setter\r\n          this.sortableInstance.option(optionName, this.options[optionName]);\r\n        }\r\n      });\r\n    }\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.sortableInstance) {\r\n      this.sortableInstance.destroy();\r\n    }\r\n  }\r\n\r\n  private create() {\r\n    const container = this.sortablejsContainer ? this.element.nativeElement.querySelector(this.sortablejsContainer) : this.element.nativeElement;\r\n\r\n    setTimeout(() => {\r\n      this.sortableInstance = Sortable.create(container, this.options);\r\n      this.sortablejsInit.emit(this.sortableInstance);\r\n    }, 0);\r\n  }\r\n\r\n  private getBindings(): SortablejsBindings {\r\n    if (!this.sortablejs) {\r\n      return new SortablejsBindings([]);\r\n    } else if (this.sortablejs instanceof SortablejsBindings) {\r\n      return this.sortablejs;\r\n    } else {\r\n      return new SortablejsBindings([this.sortablejs]);\r\n    }\r\n  }\r\n\r\n  private get options() {\r\n    return { ...this.optionsWithoutEvents, ...this.overridenOptions };\r\n  }\r\n\r\n  private get optionsWithoutEvents() {\r\n    return { ...(this.globalConfig || {}), ...(this.sortablejsOptions || {}) };\r\n  }\r\n\r\n  private proxyEvent(eventName: string, ...params: any[]) {\r\n    this.zone.run(() => { // re-entering zone, see https://github.com/SortableJS/angular-sortablejs/issues/110#issuecomment-408874600\r\n      if (this.optionsWithoutEvents && this.optionsWithoutEvents[eventName]) {\r\n        this.optionsWithoutEvents[eventName](...params);\r\n      }\r\n    });\r\n  }\r\n\r\n  private get isCloning() {\r\n    return this.sortableInstance.options.group.checkPull(this.sortableInstance, this.sortableInstance) === 'clone';\r\n  }\r\n\r\n  private clone<T>(item: T): T {\r\n    // by default pass the item through, no cloning performed\r\n    return (this.sortablejsCloneFunction || (subitem => subitem))(item);\r\n  }\r\n\r\n  private get overridenOptions(): SortablejsOptions {\r\n    // always intercept standard events but act only in case items are set (bindingEnabled)\r\n    // allows to forget about tracking this.items changes\r\n    return {\r\n      onAdd: (event: SortableEvent) => {\r\n        this.service.transfer = (items: any[]) => {\r\n          this.getBindings().injectIntoEvery(event.newIndex, items);\r\n          this.proxyEvent('onAdd', event);\r\n        };\r\n\r\n        this.proxyEvent('onAddOriginal', event);\r\n      },\r\n      onRemove: (event: SortableEvent) => {\r\n        const bindings = this.getBindings();\r\n\r\n        if (bindings.provided) {\r\n          if (this.isCloning) {\r\n            this.service.transfer(bindings.getFromEvery(event.oldIndex).map(item => this.clone(item)));\r\n\r\n            // great thanks to https://github.com/tauu\r\n            // event.item is the original item from the source list which is moved to the target list\r\n            // event.clone is a clone of the original item and will be added to source list\r\n            // If bindings are provided, adding the item dom element to the target list causes artifacts\r\n            // as it interferes with the rendering performed by the angular template.\r\n            // Therefore we remove it immediately and also move the original item back to the source list.\r\n            // (event handler may be attached to the original item and not its clone, therefore keeping\r\n            // the original dom node, circumvents side effects )\r\n            this.renderer.removeChild(event.item.parentNode, event.item);\r\n            this.renderer.insertBefore(event.clone.parentNode, event.item, event.clone);\r\n            this.renderer.removeChild(event.clone.parentNode, event.clone);\r\n          } else {\r\n            this.service.transfer(bindings.extractFromEvery(event.oldIndex));\r\n          }\r\n\r\n          this.service.transfer = null;\r\n        }\r\n\r\n        this.proxyEvent('onRemove', event);\r\n      },\r\n      onUpdate: (event: SortableEvent) => {\r\n        const bindings = this.getBindings();\r\n        const indexes = getIndexesFromEvent(event);\r\n\r\n        bindings.injectIntoEvery(indexes.new, bindings.extractFromEvery(indexes.old));\r\n        this.proxyEvent('onUpdate', event);\r\n      },\r\n    };\r\n  }\r\n\r\n}\r\n\r\ninterface SortableEvent {\r\n  oldIndex: number;\r\n  newIndex: number;\r\n  oldDraggableIndex?: number;\r\n  newDraggableIndex?: number;\r\n  item: HTMLElement;\r\n  clone: HTMLElement;\r\n}\r\n","import { ModuleWithProviders, NgModule } from '@angular/core';\r\nimport { GLOBALS } from './globals';\r\nimport { SortablejsOptions } from './sortablejs-options';\r\nimport { SortablejsDirective } from './sortablejs.directive';\r\n\r\n@NgModule({\r\n  declarations: [SortablejsDirective],\r\n  exports: [SortablejsDirective],\r\n})\r\nexport class SortablejsModule {\r\n\r\n  public static forRoot(globalOptions: SortablejsOptions): ModuleWithProviders<SortablejsModule> {\r\n    return {\r\n      ngModule: SortablejsModule,\r\n      providers: [\r\n        { provide: GLOBALS, useValue: globalOptions },\r\n      ],\r\n    };\r\n  }\r\n\r\n}\r\n"]}